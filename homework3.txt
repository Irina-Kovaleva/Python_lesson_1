#Домашнее задание 3
#Ex. 1
#Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def devider(x, y):
        return(x / y)

a = float(input("Введите делимое: "))
b = float(input("Введите делитель: "))
try:
    print("Ответ: ", devider(a, b))
except:
    print("Деление на ноль!")

#Ex. 2
#Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def personal_data(name, surname, burth_year):
    print("Имя: %s; Фамилия: %s; Год рождения: %s;" % (name, surname, burth_year))
    return None
personal_data(surname="Ковалева", name="Ирина", burth_year=1990)

#Ex. 3
#Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

def my_func_3(a, b, c):
    return(a + b + c - min(a, b, c))

print("Введите 3 числа: ")
a = float(input())
b = float(input())
c = float(input())

print(my_func_3(a, b, c))

#Ex. 4
#Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

def my_func_4_1(x, y):
    return(x ** y)

def my_func_4_2(x, y):
    res = 1
    for i in range(abs(y)):
        res = res * x
    if y < 0:
        return(1 / res)
    else:
        return(res)

a = float(input("Введите положительное число: "))
b = int(input("Введите целое отрицательное число: "))
print("Результат при первом методе: ", my_func_4_1(a, b))
print("Результат при втором методе: ", my_func_4_2(a, b))

#Ex. 5
#Программа запрашивает у пользователя строку чисел, разделенных пробелом.
#При нажатии Enter должна выводиться сумма чисел.
#Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
#Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
#Но если вместо числа вводится специальный символ, выполнение программы завершается.
#Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел
# к полученной ранее сумме и после этого завершить программу.

def my_func_5(str, break_num):
    sum = 0
    for i in range(break_num):
        sum = sum + int(str[i])
    return(sum)

string = str(input("Введите числа для расчета суммы: "))
my_list = string.split(" ")
flag = my_list.count('!')

summ_result = 0

while flag == 0:
    summ_result = summ_result + my_func_5(my_list, len(my_list))
    print(summ_result)
    string = str(input())
    my_list = string.split(" ")
    flag = my_list.count('!')

break_num = my_list.index("!")
summ_result = summ_result + my_func_5(my_list, break_num)
print(summ_result)

#Ex. 6
#Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
#Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
#Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

def my_func_6(text):
    return(text.title())

string = str(input("Enter text: "))
my_list = string.split(" ")

for i in range(len(my_list)):
    my_list[i] = my_func_6(my_list[i])

new_list = ' '.join(my_list)

print(new_list)
