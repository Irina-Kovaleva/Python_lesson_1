#Ex. 1
#Создать класс TrafficLight (светофор) и опредеor (цвет) и метод running (запуск).
# Атрибут реализовать как приватный. В рамках метода реализовать переключение светофора в режимы:
# красный, желтый, зеленый. Продолжительность первого состояния (красный) составляет 7 секунд,
# второго (желтый) — 2 секунды, третьего (зеленый) — на ваше усмотрение.
# Переключение между режимами должно осуществляться только в указанном порядке (красный, желтый, зеленый).
# Проверить работу примера, создав экземпляр и вызвав описанный метод.

# import time
# class TrafficLight:
#     #Атрибуты класса
#     def __init__(self):
#         _TrafficLight_colour = {'red', 'yellow', 'green'}
#
#     #Методы класса
#     def running(self):
#         if time.time() % 60 <= 7:
#             print('Red')
#         elif time.time() % 60 <= 9:
#             print('Yellow')
#         else:
#             print('Green')
#
# my_TrafficLight = TrafficLight()
# my_TrafficLight.running()

#Ex. 2
#Реализовать класс Road (дорога), в котором определить атрибуты: length (длина), width (ширина).
# Значения данных атрибутов должны передаваться при создании экземпляра класса.
# Атрибуты сделать защищенными. Определить метод расчета массы асфальта, необходимого для покрытия
# всего дорожного полотна. Использовать формулу: длина * ширина * масса асфальта для покрытия
# одного кв метра дороги асфальтом, толщиной в 1 см * чи сло см толщины полотна. Проверить работу метода.

class Road:

    def __init__(self, length, width):
        length = 5000
        width = 20

    def asphalt_weight(self, length, width ):
        print('Asphalt weight needed: %i' % (int(length * width * 0.25 * 0.05)))

my_road = Road(5000, 20)
my_road.asphalt_weight()